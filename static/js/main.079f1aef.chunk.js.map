{"version":3,"sources":["components/AlgorithmContext.js","components/Header.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["algorithms","bfs","greedy","a","BoxState","this","state","FringeLocation","index","path","cost","heuristic","AlgorithmmOverlord","headerRef","gridRef","search","searching","clearPaths","fringe","algorithm","TinyQueue","b","unexplored","Set","height","boxStates","add","searchLoop","fringeLoc","ExpandFringe","current","updateBox","setTimeout","bind","length","i","clicked","wasClicked","has","delete","updateAlgorithm","alg","setAlgorithm","makeMaze","clearBoard","count","c","width","gap","Math","floor","random","x","makeBlocks","Array","fill","map","isSearching","indexY","indexX","goalY","startY","abs","goalIndex","dx1","dy1","dy2","startX","pop","newIndex","h","push","concat","Header","props","setState","className","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Button","onClick","algorithmOverlord","NavDropdown","title","Object","entries","value","Item","Link","React","Component","Box","setClass","newClass","class","onMouseDown","onMouseOver","OffScreenWarning","style","overflow","marginTop","Grid","boxState","boxes","createTable","table","children","j","ref","e","preventDefault","buttons","componentDidMount","createRef","textAlign","PathingApp","document","Boolean","window","location","hostname","match","ReactDOM","render","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.079f1aef.chunk.js","sourcesContent":["import TinyQueue from 'tinyqueue';\r\n\r\nexport const algorithms = {bfs:\"Dijkstra's (BFS)\", greedy:\"Best First Search (Greedy)\",a:\"A*\"}\r\nexport const width = 63;\r\nexport const height = 30;\r\n\r\nconst startIndex = 895;\r\nconst goalIndex = 929;\r\n\r\n\r\nclass BoxState{\r\n    constructor(){\r\n        this.state = \"blank\"\r\n    }\r\n}\r\n\r\nclass FringeLocation{\r\n    constructor(index, path, cost, heuristic){\r\n        this.index = index\r\n        this.path = path\r\n        this.cost = cost\r\n        this.heuristic = heuristic\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class AlgorithmmOverlord{\r\n    constructor(headerRef, gridRef){\r\n        this.algorithm = \"greedy\"\r\n        this.isSearching = false;\r\n\r\n        this.wasClicked = new Set();\r\n\r\n        this.headerRef = headerRef; //For Callbacks\r\n        this.gridRef = gridRef; //For Callbacks\r\n        this.boxStates = new Array(width * height).fill().map(function(){return new BoxState()})\r\n        this.boxStates[startIndex].state = \"start\";\r\n        this.boxStates[goalIndex].state = \"goal\";\r\n        this.searching = false;\r\n    }\r\n\r\n    search = () => {\r\n        if(this.searching) return;\r\n        this.clearPaths();\r\n        this.searching = true;\r\n        let fringe = null;\r\n        if(this.algorithm === \"bfs\"){\r\n            fringe = new TinyQueue([new FringeLocation(startIndex, [], 0, 0)], function(a, b) {\r\n                return a.cost - b.cost;\r\n            });\r\n        }else if(this.algorithm === \"greedy\"){\r\n            fringe = new TinyQueue ([new FringeLocation(startIndex, [], 0, 0)], function(a, b) {\r\n                //if(a.heuristic === b.heuristic) return a.cost - b.cost\r\n                return a.heuristic - b.heuristic;\r\n            });\r\n        }else if(this.algorithm === \"a\"){\r\n            fringe = new TinyQueue ([new FringeLocation(startIndex, [], 0, 0)], function(a, b) {\r\n                if(a.cost + a.heuristic - b.cost - b.heuristic === 0) return a.cost - b.cost;\r\n                return a.cost + a.heuristic - b.cost - b.heuristic;\r\n            });\r\n        }\r\n        \r\n        let unexplored = new Set();\r\n        for(let index = 0; index < height * width; index++){\r\n            if(this.boxStates[index].state === \"blank\") unexplored.add(index);\r\n        }\r\n        unexplored.add(goalIndex);\r\n        unexplored.add(startIndex);\r\n        this.searchLoop(fringe, unexplored);\r\n\r\n    }\r\n\r\n    searchLoop = (fringe, unexplored) => {\r\n        let fringeLoc = ExpandFringe(fringe, unexplored);\r\n        if(fringeLoc === null){ //Exhausted search space\r\n            this.searching = false;\r\n            return;\r\n        }\r\n        let index = fringeLoc.index;\r\n\r\n        if(this.boxStates[index].state === \"goal\"){ //Found goal\r\n            fringe.length = 0;\r\n            for(let i = 1; i < fringeLoc.path.length; i++){\r\n                setTimeout(function() {\r\n                    let index = fringeLoc.path[i]\r\n                    this.boxStates[index].state = \"path\"\r\n                    this.gridRef.current.updateBox(index, this.boxStates[index])\r\n                    if(i === fringeLoc.path.length - 1) this.searching = false;\r\n                }.bind(this), i * 45);\r\n            }\r\n            return;\r\n        }\r\n        if(this.boxStates[index].state === \"blank\"){ //Haven't found goal\r\n            this.boxStates[index].state = \"search\"\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }\r\n        setTimeout(function() { //Search again\r\n            this.searchLoop(fringe, unexplored)\r\n        }.bind(this), 1)\r\n        \r\n    }\r\n\r\n    clicked = (index) => {\r\n        if(this.searching) return;\r\n        if(this.wasClicked.has(index)) return;\r\n        if(this.boxStates[index].state === \"blank\" || this.boxStates[index].state === \"search\" || this.boxStates[index].state === \"path\"){\r\n            this.boxStates[index].state = \"block\";\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }else if(this.boxStates[index].state === \"block\"){\r\n            this.boxStates[index].state = \"blank\";\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }\r\n        this.wasClicked.add(index);\r\n        setTimeout(function(){\r\n            this.wasClicked.delete(index);\r\n        }.bind(this), 200); //Can't re-click for 200ms. Avoids it re-engaging same square erroneously\r\n    }\r\n\r\n    updateAlgorithm = (alg) => {\r\n        if(this.searching) return;\r\n        this.algorithm = alg;\r\n        this.headerRef.current.setAlgorithm(alg);\r\n        this.boxStates[startIndex].state = \"start\";\r\n        this.boxStates[goalIndex].state = \"goal\";\r\n        for(let index = 0; index < height * width; index++){\r\n            if(this.boxStates[index].state === \"path\" || this.boxStates[index].state === \"search\") this.boxStates[index].state = \"blank\"\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }\r\n    };\r\n\r\n    makeMaze = () => {\r\n        if(this.searching) return;\r\n        \r\n        this.clearBoard();\r\n\r\n        this.searching = true\r\n        \r\n        let count = 0;\r\n\r\n        //top\r\n        for(let c = 0; c < width; c++){\r\n            let index = c;\r\n            count += 1\r\n            setTimeout(function(){\r\n                this.boxStates[index].state = \"block\"\r\n                this.gridRef.current.updateBox(index, this.boxStates[index])\r\n            }.bind(this), count * 10);\r\n        }\r\n        //bottom\r\n        for(let c = 0; c < width; c++){\r\n            let index = c + width * (height - 1);\r\n            count += 1\r\n            setTimeout(function(){\r\n                this.boxStates[index].state = \"block\"\r\n                this.gridRef.current.updateBox(index, this.boxStates[index])\r\n            }.bind(this), count * 10);\r\n        }\r\n\r\n        for(let c = 0; c < Math.floor(width / 2) + 1; c++){\r\n            let gap = 1 + Math.floor(Math.random() * Math.floor(height - 2));\r\n            if(c === 0 || c === Math.floor(width / 2)) gap = -1;\r\n            for(let x = 0; x < height; x++){\r\n                let index = c*2 + x * width;\r\n                if(this.boxStates[index].state === \"blank\" && x !== gap){\r\n                    count+=1\r\n                    setTimeout(function(){\r\n                        this.boxStates[index].state = \"block\"\r\n                        this.gridRef.current.updateBox(index, this.boxStates[index])\r\n                        if(c === Math.floor(width / 2) && x === height - 1) this.searching = false;\r\n                    }.bind(this), count * 10);\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    makeBlocks = () => {\r\n        if(this.searching) return;\r\n        this.clearBoard();\r\n        this.searching = true;\r\n        let count = 0;\r\n        for(let c = 0; c < 500; c++){\r\n            let index =  Math.floor(Math.random() * Math.floor(1890));\r\n            if(this.boxStates[index].state === \"blank\"){\r\n                count+=1;\r\n                setTimeout(function(){\r\n                    this.boxStates[index].state = \"block\"\r\n                    this.gridRef.current.updateBox(index, this.boxStates[index])\r\n                    if(c === 499) this.searching = false;\r\n                }.bind(this), count * 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearBoard = () => {\r\n        if(this.searching) return;\r\n        this.boxStates = new Array(height * width).fill().map(function(){return new BoxState()})\r\n        this.boxStates[startIndex].state = \"start\";\r\n        this.boxStates[goalIndex].state = \"goal\";\r\n        for(let index = 0; index < height * width; index++){\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }\r\n    }\r\n\r\n    clearPaths = () => {\r\n        if(this.searching) return;\r\n        this.boxStates[startIndex].state = \"start\";\r\n        this.boxStates[goalIndex].state = \"goal\";\r\n        for(let index = 0; index < height * width; index++){\r\n            if(this.boxStates[index].state === \"path\" || this.boxStates[index].state === \"search\") this.boxStates[index].state = \"blank\"\r\n            this.gridRef.current.updateBox(index, this.boxStates[index])\r\n        }\r\n    }\r\n}\r\n\r\nconst heuristic = (index) => {\r\n    let indexY = Math.floor(index / width);\r\n    let indexX = index % width;\r\n    let goalY = Math.floor(goalIndex / width);\r\n    let goalX = goalIndex % width;\r\n    let startY = Math.floor(startIndex / width);\r\n    let startX = startIndex % width;\r\n\r\n    let heuristic = Math.abs(indexX - goalX) + Math.abs(indexY - goalY)\r\n\r\n    let dx1 = indexX - goalX\r\n    let dy1 = indexY - goalY\r\n    let dx2 = startX - goalX\r\n    let dy2 = startY - goalY\r\n    let cross = Math.abs(dx1*dy2 - dx2*dy1)\r\n    heuristic += cross*0.0000001 //Push the path towards the ideal line ignoring blocks. Because this is a small number, it will never add 1.0 or more to our heuristic for this search space, so it won't violate admissabiliity\r\n    //This is an established practice, taken from stanford\r\n\r\n    return heuristic\r\n    \r\n    \r\n}\r\n\r\n//Expands Fringe and returns index to mark as searched\r\nconst ExpandFringe = (fringe, unexplored) => {\r\n    if(fringe.length === 0) return null;\r\n    let fringeLoc = fringe.pop();\r\n    while(!unexplored.has(fringeLoc.index)){\r\n        if(fringe.length === 0) return null;\r\n        fringeLoc = fringe.pop();\r\n    }\r\n\r\n    let index = fringeLoc.index;\r\n    unexplored.delete(index);\r\n    let indexY = Math.floor(index / width);\r\n    let indexX = index % width;\r\n\r\n    if(indexX < width - 1){\r\n        let newIndex = index + 1\r\n        let h = heuristic(newIndex)\r\n        fringe.push(new FringeLocation(newIndex, fringeLoc.path.concat([index]), 1 + fringeLoc.path.length, h));\r\n    }\r\n\r\n    if(indexY > 0){\r\n        let newIndex = index - width\r\n        let h = heuristic(newIndex)\r\n        fringe.push(new FringeLocation(newIndex, fringeLoc.path.concat([index]), 1 + fringeLoc.path.length, h));\r\n    }\r\n\r\n    if(indexY < height - 1){\r\n        let newIndex = index + width\r\n        let h = heuristic(newIndex)\r\n        fringe.push(new FringeLocation(newIndex, fringeLoc.path.concat([index]), 1 + fringeLoc.path.length, h));\r\n    }\r\n\r\n    if(indexX > 0){\r\n        let newIndex = index - 1\r\n        let h = heuristic(newIndex)\r\n        fringe.push(new FringeLocation(newIndex, fringeLoc.path.concat([index]), 1 + fringeLoc.path.length, h));\r\n    }\r\n    return fringeLoc;\r\n    \r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithms } from \"./AlgorithmContext\";\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {algorithm: algorithms[\"greedy\"]};\r\n    }\r\n\r\n    setAlgorithm = (alg) => {\r\n        this.setState({algorithm: algorithms[alg]})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Header\">\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand>Pathing Visualizer</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Button onClick={this.props.algorithmOverlord.search}>Search!</Button>\r\n                        <NavDropdown title={this.state.algorithm} id=\"basic-nav-dropdown\">\r\n                        {Object.entries(algorithms).map((value, index) => {\r\n                            return <NavDropdown.Item onClick={() => this.props.algorithmOverlord.updateAlgorithm(value[0])}>{value[1]}</NavDropdown.Item>\r\n                        })}\r\n                        </NavDropdown>\r\n                        <NavDropdown title=\"Generate Board\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item onClick={() => this.props.algorithmOverlord.makeMaze()}>Random Maze</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => this.props.algorithmOverlord.makeBlocks()}>Random Blocks</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link onClick={this.props.algorithmOverlord.clearBoard}>Clear All</Nav.Link>\r\n                        <Nav.Link onClick={this.props.algorithmOverlord.clearPaths}>Clear Paths</Nav.Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./Grid.css\";\r\nimport { width, height} from \"./AlgorithmContext\"\r\n\r\nclass Box extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {class: \"inner-blank\"};\r\n    }\r\n\r\n    setClass = (newClass) => {\r\n        this.setState({class: \"inner-\" + newClass})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div onMouseDown={this.props.clicked}  onMouseOver={this.props.clicked} className=\"box\">\r\n                <div className={this.state.class}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass OffScreenWarning extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{overflow: \"hidden\"}}><h3 style={{marginTop: \"calc(100vh - 250px)\"}}>{\"If you see this text, but no large grid above, your browser is several years out of date. Please use an up-to-date Chrome or Firefox based browser.\"}</h3></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Grid extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.boxes = Array(height*width).fill().map(function(){return React.createRef()});\r\n    }\r\n\r\n    updateBox = (index, boxState) => {\r\n        this.boxes[index].current.setClass(boxState.state)\r\n    }\r\n\r\n    createTable = () => {\r\n        let table = []\r\n        table.push();\r\n        // Outer loop to create parent\r\n        for (let i = 0; i < height; i++) {\r\n          let children = []\r\n          //Inner loop to create children\r\n          for (let j = 0; j < width; j++) {\r\n            children.push(<Box ref={this.boxes[j + width * i]} clicked={(e) => {e.preventDefault(); if(e.buttons === 1) {this.props.algorithmOverlord.clicked(j + width * i)}}}></Box>)\r\n          }\r\n          //Create the parent and add the children\r\n          table.push(<div onMouseDown={(e) => e.preventDefault()}  className=\"row\">{children}</div>)\r\n        }\r\n        return table\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        for(let i = 0; i < height * width; i++){\r\n            this.updateBox(i, this.props.algorithmOverlord.boxStates[i])\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div style={{width: \"100%\", height: \"100%\", textAlign: \"center\"}}>\r\n                <div className=\"grid\" onMouseDown={(e) => e.preventDefault()} >\r\n                    {/*this.expandFringe=expandFringe*/}\r\n                    {this.createTable()}\r\n                </div>\r\n                <OffScreenWarning/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  ","import React from 'react';\n\nimport Header from \"./components/Header\";\nimport Grid from \"./components/Grid\";\nimport { AlgorithmmOverlord } from \"./components/AlgorithmContext\";\n\nclass PathingApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.headerRef = React.createRef();\n    this.gridRef = React.createRef();\n    this.algorithmOverlord = new AlgorithmmOverlord(this.headerRef, this.gridRef);\n  }\n\n  componentWillMount() {\n    document.title = 'Pathing Visualizer'\n  }\n\n  render(){\n    return(\n        <div className=\"pathingApp\">\n          <Header ref={this.headerRef} algorithmOverlord={this.algorithmOverlord}></Header>\n          <Grid ref={this.gridRef} algorithmOverlord={this.algorithmOverlord}></Grid>\n        </div>\n    );\n  }\n}\n\nexport default PathingApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}